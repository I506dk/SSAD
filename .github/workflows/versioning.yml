name: version
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
env:
  REPO: i506dk/ssad

jobs:
  version:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Fetch all commits
          fetch-depth: 0
          
      # Create semantic version
      - name: Semantic Versioning
        id: versioning
        uses: PaulHatch/semantic-version@v4.0.2
        with:
          branch: main
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "Major"
          # A string which indicates the flags used by the `major_pattern` regular expression. Supported flags: idgs
          major_regexp_flags: ""
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "Minor"
          # A string which indicates the flags used by the `minor_pattern` regular expression. Supported flags: idgs
          minor_regexp_flags: ""
          # Format for the version
          format: "v${major}.${minor}.${patch}"
      
      #- name: Check output
      #  run: echo ${{ steps.versioning.outputs.version_tag }}
      
      # Create executable
      - name: Build EXE from Python Script
        # You may pin to the exact commit or the version.
        # uses: Nuitka/Nuitka-Action@d345ca7ac4d8cf05fae75a6dc53ec04fc5f392f8
        uses: Nuitka/Nuitka-Action@v0.4
        with:
          # name or path to python script that is to be built
          script-name: ${{ github.event.repository.name }}
          # Enable standalone mode for output. This allows you to transfer the created binary to other machines without it using an existing Python installation. This also means it will become big. It implies these option: "-- follow-imports" and "--python-flag=no_site". Defaults to true.
          standalone: true
          # On top of standalone mode, enable onefile mode. This means not a folder, but a compressed executable is created and used. Defaults to true.
          onefile: true
          # Allow Nuitka to download external code if necessary, e.g. dependency walker, ccache, and even gcc on Windows. To disable, redirect input from nul device, e.g. "</dev/null" or "<NUL:". Default is to prompt.
          assume-yes-for-downloads: true
          
      # Create new release  
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.versioning.outputs.version_tag }}
          release_name: ${{ steps.versioning.outputs.version_tag }}
